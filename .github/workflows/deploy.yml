name: Deploy to Heroku

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA to deploy'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: library_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.commit_sha }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary
        pip install -r requirements.txt
        
    - name: Run Tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/library_db
      run: |
        python manage.py test
        
    - name: Check Django Project
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/library_db
      run: |
        python manage.py check
        python manage.py makemigrations --check --dry-run

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.commit_sha }}
    
    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh
    
    - name: Login to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "a22-library"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        
    - name: Wait for Database
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        # Wait for PostgreSQL to be ready
        sleep 10
        
    - name: Run Django Migrations
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku run "python manage.py migrate --noinput" -a a22-library
        
    - name: Create Superuser
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku run "DJANGO_SUPERUSER_PASSWORD='${{ secrets.DJANGO_ADMIN_PASSWORD }}' DJANGO_SUPERUSER_EMAIL='${{ secrets.DJANGO_ADMIN_EMAIL }}' python manage.py createsuperuser --noinput --username admin" -a a22-library || true